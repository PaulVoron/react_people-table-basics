{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","title","className","isActive","classNames","Navbar","role","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","useParams","sex","name","born","died","mother","motherName","father","fatherName","PeopleTable","people","peopleWithParents","map","find","PeoplePage","useState","setPeople","isLoader","setIsLoader","isError","setIsError","useEffect","loadPeople","result","length","NotFoundPage","App","index","element","path","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d8ece248.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  title: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, title }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {title}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" title=\"Home\" />\n        <PageNavLink to=\"people\" title=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={slug === person.slug ? 'has-background-warning' : ''}\n    >\n      <td>\n        <Link\n          to={`../${person.slug}`}\n          className={person.sex === 'f' ? 'has-text-danger' : ''}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      <td>\n        {person.mother ? (\n          <Link\n            to={`/people/${person.mother.slug}`}\n            className=\"has-text-danger\"\n          >\n            {person.mother.name}\n          </Link>\n        ) : (\n          person.motherName || '-'\n        )}\n      </td>\n\n      <td>\n        {person.father ? (\n          <Link\n            to={`/people/${person.father.slug}`}\n          >\n            {person.father.name}\n          </Link>\n        ) : (\n          person.fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const peopleWithParents = people.map(person => {\n    return {\n      ...person,\n      mother: people.find(mother => mother.name === person.motherName),\n      father: people.find(father => father.name === person.fatherName),\n    };\n  });\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {peopleWithParents.map(person => (\n          <PersonLink\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types/Person';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[] | null>([]);\n  const [isLoader, setIsLoader] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const loadPeople = async () => {\n      try {\n        setIsLoader(true);\n\n        const result = await getPeople();\n\n        setPeople(result);\n      } catch {\n        setIsError(true);\n      } finally {\n        setIsLoader(false);\n      }\n    };\n\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoader && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoader && !people?.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people && !!people.length && (<PeopleTable people={people} />)}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}